//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace EditorEcs {

public class IFacility : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IFacility(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IFacility obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IFacility() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Xuthus_VirtualServerPINVOKE.delete_IFacility(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual uint fetchframe() {
    uint ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchframe(swigCPtr);
    return ret;
  }

  public virtual ulong fetchtime() {
    ulong ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchtime(swigCPtr);
    return ret;
  }

  public virtual float fetchspeed(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchspeed(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetchcd(ulong arg0, uint arg1) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchcd(swigCPtr, arg0, arg1);
    return ret;
  }

  public virtual int fetchphasecount(ulong arg0, uint arg1) {
    int ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchphasecount(swigCPtr, arg0, arg1);
    return ret;
  }

  public virtual float fetch_height_at(ulong arg0, float arg1, float arg2, float arg3) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_height_at(swigCPtr, arg0, arg1, arg2, arg3);
    return ret;
  }

  public virtual float fetch_rotatespeed(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_rotatespeed(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetch_move_interpolation(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_move_interpolation(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetchradius(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchradius(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetchheight(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetchheight(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetch_pitch_attr(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_pitch_attr(swigCPtr, arg0);
    return ret;
  }

  public virtual ulong get_associate_entity(ulong arg0) {
    ulong ret = Xuthus_VirtualServerPINVOKE.IFacility_get_associate_entity(swigCPtr, arg0);
    return ret;
  }

  public virtual bool is_role(ulong arg0) {
    bool ret = Xuthus_VirtualServerPINVOKE.IFacility_is_role(swigCPtr, arg0);
    return ret;
  }

  public virtual uint fetch_hit_header_hash(ulong arg0) {
    uint ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_hit_header_hash(swigCPtr, arg0);
    return ret;
  }

  public virtual uint fetch_delay(ulong arg0) {
    uint ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_delay(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetch_auto_rotatespeed(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_auto_rotatespeed(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetch_tsangle_factor() {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_tsangle_factor(swigCPtr);
    return ret;
  }

  public virtual bool fetch_smart_targetlock(ulong arg0) {
    bool ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_smart_targetlock(swigCPtr, arg0);
    return ret;
  }

  public virtual int fetch_smart_targetlock_time() {
    int ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_smart_targetlock_time(swigCPtr);
    return ret;
  }

  public virtual uint fetch_skill_probability_max_cumulation(ulong arg0) {
    uint ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_skill_probability_max_cumulation(swigCPtr, arg0);
    return ret;
  }

  public virtual ulong mob_required(ulong arg0, int arg1, float arg2, float arg3, float arg4, float arg5) {
    ulong ret = Xuthus_VirtualServerPINVOKE.IFacility_mob_required(swigCPtr, arg0, arg1, arg2, arg3, arg4, arg5);
    return ret;
  }

  public virtual void mob_released(ulong raw_id) {
    Xuthus_VirtualServerPINVOKE.IFacility_mob_released(swigCPtr, raw_id);
  }

  public virtual void on_bullet_target_selected(ulong arg0, ulong arg1, ulong arg2) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_bullet_target_selected(swigCPtr, arg0, arg1, arg2);
  }

  public virtual void on_bullet_clear(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, bool arg5) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_bullet_clear(swigCPtr, arg0, arg1, arg2, arg3, arg4, arg5);
  }

  public virtual void on_skill_end(ulong arg0, uint arg1, uint arg2, uint arg3) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_skill_end(swigCPtr, arg0, arg1, arg2, arg3);
  }

  public virtual void on_item_drop(ulong arg0, uint arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_item_drop(swigCPtr, arg0, arg1);
  }

  public virtual void on_space_time_lock(ulong arg0, float arg1, float arg2, int arg3, bool arg4) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_space_time_lock(swigCPtr, arg0, arg1, arg2, arg3, arg4);
  }

  public virtual void on_trigger_qte_event(ulong arg0, int arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_trigger_qte_event(swigCPtr, arg0, arg1);
  }

  public virtual int get_assist_role_count(ulong arg0) {
    int ret = Xuthus_VirtualServerPINVOKE.IFacility_get_assist_role_count(swigCPtr, arg0);
    return ret;
  }

  public virtual bool is_carried_player(ulong arg0) {
    bool ret = Xuthus_VirtualServerPINVOKE.IFacility_is_carried_player(swigCPtr, arg0);
    return ret;
  }

  public virtual void deliver_message(ulong arg0, string arg1, int arg2) {
    Xuthus_VirtualServerPINVOKE.IFacility_deliver_message(swigCPtr, arg0, arg1, arg2);
    if (Xuthus_VirtualServerPINVOKE.SWIGPendingException.Pending) throw Xuthus_VirtualServerPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_wholelife_bullet_project(ulong arg0) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_wholelife_bullet_project(swigCPtr, arg0);
  }

  public virtual void push_skill_stringify(ulong arg0, uint arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_push_skill_stringify(swigCPtr, arg0, arg1);
  }

  public virtual void push_hit_stringify(ulong arg0, uint arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_push_hit_stringify(swigCPtr, arg0, arg1);
  }

  public virtual void on_target_selected(ulong arg0, ulong arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_target_selected(swigCPtr, arg0, arg1);
  }

  public virtual string fetch_hit_header_addr(ulong arg0) {
    string ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_hit_header_addr(swigCPtr, arg0);
    return ret;
  }

  public virtual ulong get_targets(ulong arg0) {
    ulong ret = Xuthus_VirtualServerPINVOKE.IFacility_get_targets(swigCPtr, arg0);
    return ret;
  }

  public virtual float get_immortal_length() {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_get_immortal_length(swigCPtr);
    return ret;
  }

  public virtual float fetch_floating_upper(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_floating_upper(swigCPtr, arg0);
    return ret;
  }

  public virtual float fetch_floating_lower(ulong arg0) {
    float ret = Xuthus_VirtualServerPINVOKE.IFacility_fetch_floating_lower(swigCPtr, arg0);
    return ret;
  }

  public virtual void editor_bullet_sync(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, float arg5) {
    Xuthus_VirtualServerPINVOKE.IFacility_editor_bullet_sync(swigCPtr, arg0, arg1, arg2, arg3, arg4, arg5);
  }

  public virtual void report_error(string arg0) {
    Xuthus_VirtualServerPINVOKE.IFacility_report_error(swigCPtr, arg0);
    if (Xuthus_VirtualServerPINVOKE.SWIGPendingException.Pending) throw Xuthus_VirtualServerPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void report_script_parse_error(string message) {
    Xuthus_VirtualServerPINVOKE.IFacility_report_script_parse_error(swigCPtr, message);
    if (Xuthus_VirtualServerPINVOKE.SWIGPendingException.Pending) throw Xuthus_VirtualServerPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void on_skill_begin(ulong arg0, uint arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_skill_begin(swigCPtr, arg0, arg1);
  }

  public virtual bool has_buff(ulong arg0, uint arg1) {
    bool ret = Xuthus_VirtualServerPINVOKE.IFacility_has_buff(swigCPtr, arg0, arg1);
    return ret;
  }

  public virtual void on_state_change(ulong arg0, int arg1, int arg2) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_state_change(swigCPtr, arg0, arg1, arg2);
  }

  public virtual void on_state_renew(ulong arg0, int arg1) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_state_renew(swigCPtr, arg0, arg1);
  }

  public virtual void on_framefixed_on(ulong arg0, float arg1, bool arg2) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_framefixed_on(swigCPtr, arg0, arg1, arg2);
  }

  public virtual void on_framefixed_off(ulong arg0) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_framefixed_off(swigCPtr, arg0);
  }

  public virtual void on_cdfixed_on(ulong arg0) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_cdfixed_on(swigCPtr, arg0);
  }

  public virtual void on_cdfixed_off(ulong arg0) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_cdfixed_off(swigCPtr, arg0);
  }

  public virtual void on_node_change(ulong arg0, uint arg1, int arg2) {
    Xuthus_VirtualServerPINVOKE.IFacility_on_node_change(swigCPtr, arg0, arg1, arg2);
  }

  public virtual void report_id_not_found_error(ulong raw_id) {
    Xuthus_VirtualServerPINVOKE.IFacility_report_id_not_found_error(swigCPtr, raw_id);
  }

  public virtual void report_invalid_pos_error(ulong raw_id, float arg1, float arg2, float arg3) {
    Xuthus_VirtualServerPINVOKE.IFacility_report_invalid_pos_error(swigCPtr, raw_id, arg1, arg2, arg3);
  }

  public virtual bool verify_pos(ulong arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6) {
    bool ret = Xuthus_VirtualServerPINVOKE.IFacility_verify_pos(swigCPtr, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    return ret;
  }

  public IFacility() : this(Xuthus_VirtualServerPINVOKE.new_IFacility(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("fetchframe", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateIFacility_0(SwigDirectorMethodfetchframe);
    if (SwigDerivedClassHasMethod("fetchtime", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateIFacility_1(SwigDirectorMethodfetchtime);
    if (SwigDerivedClassHasMethod("fetchspeed", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateIFacility_2(SwigDirectorMethodfetchspeed);
    if (SwigDerivedClassHasMethod("fetchcd", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateIFacility_3(SwigDirectorMethodfetchcd);
    if (SwigDerivedClassHasMethod("fetchphasecount", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateIFacility_4(SwigDirectorMethodfetchphasecount);
    if (SwigDerivedClassHasMethod("fetch_height_at", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateIFacility_5(SwigDirectorMethodfetch_height_at);
    if (SwigDerivedClassHasMethod("fetch_rotatespeed", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateIFacility_6(SwigDirectorMethodfetch_rotatespeed);
    if (SwigDerivedClassHasMethod("fetch_move_interpolation", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateIFacility_7(SwigDirectorMethodfetch_move_interpolation);
    if (SwigDerivedClassHasMethod("fetchradius", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateIFacility_8(SwigDirectorMethodfetchradius);
    if (SwigDerivedClassHasMethod("fetchheight", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateIFacility_9(SwigDirectorMethodfetchheight);
    if (SwigDerivedClassHasMethod("fetch_pitch_attr", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateIFacility_10(SwigDirectorMethodfetch_pitch_attr);
    if (SwigDerivedClassHasMethod("get_associate_entity", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateIFacility_11(SwigDirectorMethodget_associate_entity);
    if (SwigDerivedClassHasMethod("is_role", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateIFacility_12(SwigDirectorMethodis_role);
    if (SwigDerivedClassHasMethod("fetch_hit_header_hash", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateIFacility_13(SwigDirectorMethodfetch_hit_header_hash);
    if (SwigDerivedClassHasMethod("fetch_delay", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateIFacility_14(SwigDirectorMethodfetch_delay);
    if (SwigDerivedClassHasMethod("fetch_auto_rotatespeed", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateIFacility_15(SwigDirectorMethodfetch_auto_rotatespeed);
    if (SwigDerivedClassHasMethod("fetch_tsangle_factor", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateIFacility_16(SwigDirectorMethodfetch_tsangle_factor);
    if (SwigDerivedClassHasMethod("fetch_smart_targetlock", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateIFacility_17(SwigDirectorMethodfetch_smart_targetlock);
    if (SwigDerivedClassHasMethod("fetch_smart_targetlock_time", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateIFacility_18(SwigDirectorMethodfetch_smart_targetlock_time);
    if (SwigDerivedClassHasMethod("fetch_skill_probability_max_cumulation", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateIFacility_19(SwigDirectorMethodfetch_skill_probability_max_cumulation);
    if (SwigDerivedClassHasMethod("mob_required", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateIFacility_20(SwigDirectorMethodmob_required);
    if (SwigDerivedClassHasMethod("mob_released", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateIFacility_21(SwigDirectorMethodmob_released);
    if (SwigDerivedClassHasMethod("on_bullet_target_selected", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateIFacility_22(SwigDirectorMethodon_bullet_target_selected);
    if (SwigDerivedClassHasMethod("on_bullet_clear", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateIFacility_23(SwigDirectorMethodon_bullet_clear);
    if (SwigDerivedClassHasMethod("on_skill_end", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateIFacility_24(SwigDirectorMethodon_skill_end);
    if (SwigDerivedClassHasMethod("on_item_drop", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateIFacility_25(SwigDirectorMethodon_item_drop);
    if (SwigDerivedClassHasMethod("on_space_time_lock", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateIFacility_26(SwigDirectorMethodon_space_time_lock);
    if (SwigDerivedClassHasMethod("on_trigger_qte_event", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateIFacility_27(SwigDirectorMethodon_trigger_qte_event);
    if (SwigDerivedClassHasMethod("get_assist_role_count", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateIFacility_28(SwigDirectorMethodget_assist_role_count);
    if (SwigDerivedClassHasMethod("is_carried_player", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateIFacility_29(SwigDirectorMethodis_carried_player);
    if (SwigDerivedClassHasMethod("deliver_message", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateIFacility_30(SwigDirectorMethoddeliver_message);
    if (SwigDerivedClassHasMethod("on_wholelife_bullet_project", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateIFacility_31(SwigDirectorMethodon_wholelife_bullet_project);
    if (SwigDerivedClassHasMethod("push_skill_stringify", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateIFacility_32(SwigDirectorMethodpush_skill_stringify);
    if (SwigDerivedClassHasMethod("push_hit_stringify", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateIFacility_33(SwigDirectorMethodpush_hit_stringify);
    if (SwigDerivedClassHasMethod("on_target_selected", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateIFacility_34(SwigDirectorMethodon_target_selected);
    if (SwigDerivedClassHasMethod("fetch_hit_header_addr", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateIFacility_35(SwigDirectorMethodfetch_hit_header_addr);
    if (SwigDerivedClassHasMethod("get_targets", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateIFacility_36(SwigDirectorMethodget_targets);
    if (SwigDerivedClassHasMethod("get_immortal_length", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateIFacility_37(SwigDirectorMethodget_immortal_length);
    if (SwigDerivedClassHasMethod("fetch_floating_upper", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateIFacility_38(SwigDirectorMethodfetch_floating_upper);
    if (SwigDerivedClassHasMethod("fetch_floating_lower", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateIFacility_39(SwigDirectorMethodfetch_floating_lower);
    if (SwigDerivedClassHasMethod("editor_bullet_sync", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateIFacility_40(SwigDirectorMethodeditor_bullet_sync);
    if (SwigDerivedClassHasMethod("report_error", swigMethodTypes41))
      swigDelegate41 = new SwigDelegateIFacility_41(SwigDirectorMethodreport_error);
    if (SwigDerivedClassHasMethod("report_script_parse_error", swigMethodTypes42))
      swigDelegate42 = new SwigDelegateIFacility_42(SwigDirectorMethodreport_script_parse_error);
    if (SwigDerivedClassHasMethod("on_skill_begin", swigMethodTypes43))
      swigDelegate43 = new SwigDelegateIFacility_43(SwigDirectorMethodon_skill_begin);
    if (SwigDerivedClassHasMethod("has_buff", swigMethodTypes44))
      swigDelegate44 = new SwigDelegateIFacility_44(SwigDirectorMethodhas_buff);
    if (SwigDerivedClassHasMethod("on_state_change", swigMethodTypes45))
      swigDelegate45 = new SwigDelegateIFacility_45(SwigDirectorMethodon_state_change);
    if (SwigDerivedClassHasMethod("on_state_renew", swigMethodTypes46))
      swigDelegate46 = new SwigDelegateIFacility_46(SwigDirectorMethodon_state_renew);
    if (SwigDerivedClassHasMethod("on_framefixed_on", swigMethodTypes47))
      swigDelegate47 = new SwigDelegateIFacility_47(SwigDirectorMethodon_framefixed_on);
    if (SwigDerivedClassHasMethod("on_framefixed_off", swigMethodTypes48))
      swigDelegate48 = new SwigDelegateIFacility_48(SwigDirectorMethodon_framefixed_off);
    if (SwigDerivedClassHasMethod("on_cdfixed_on", swigMethodTypes49))
      swigDelegate49 = new SwigDelegateIFacility_49(SwigDirectorMethodon_cdfixed_on);
    if (SwigDerivedClassHasMethod("on_cdfixed_off", swigMethodTypes50))
      swigDelegate50 = new SwigDelegateIFacility_50(SwigDirectorMethodon_cdfixed_off);
    if (SwigDerivedClassHasMethod("on_node_change", swigMethodTypes51))
      swigDelegate51 = new SwigDelegateIFacility_51(SwigDirectorMethodon_node_change);
    if (SwigDerivedClassHasMethod("report_id_not_found_error", swigMethodTypes52))
      swigDelegate52 = new SwigDelegateIFacility_52(SwigDirectorMethodreport_id_not_found_error);
    if (SwigDerivedClassHasMethod("report_invalid_pos_error", swigMethodTypes53))
      swigDelegate53 = new SwigDelegateIFacility_53(SwigDirectorMethodreport_invalid_pos_error);
    if (SwigDerivedClassHasMethod("verify_pos", swigMethodTypes54))
      swigDelegate54 = new SwigDelegateIFacility_54(SwigDirectorMethodverify_pos);
    Xuthus_VirtualServerPINVOKE.IFacility_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45, swigDelegate46, swigDelegate47, swigDelegate48, swigDelegate49, swigDelegate50, swigDelegate51, swigDelegate52, swigDelegate53, swigDelegate54);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(IFacility));
    return hasDerivedMethod;
  }

  private uint SwigDirectorMethodfetchframe() {
    return fetchframe();
  }

  private ulong SwigDirectorMethodfetchtime() {
    return fetchtime();
  }

  private float SwigDirectorMethodfetchspeed(ulong arg0) {
    return fetchspeed(arg0);
  }

  private float SwigDirectorMethodfetchcd(ulong arg0, uint arg1) {
    return fetchcd(arg0, arg1);
  }

  private int SwigDirectorMethodfetchphasecount(ulong arg0, uint arg1) {
    return fetchphasecount(arg0, arg1);
  }

  private float SwigDirectorMethodfetch_height_at(ulong arg0, float arg1, float arg2, float arg3) {
    return fetch_height_at(arg0, arg1, arg2, arg3);
  }

  private float SwigDirectorMethodfetch_rotatespeed(ulong arg0) {
    return fetch_rotatespeed(arg0);
  }

  private float SwigDirectorMethodfetch_move_interpolation(ulong arg0) {
    return fetch_move_interpolation(arg0);
  }

  private float SwigDirectorMethodfetchradius(ulong arg0) {
    return fetchradius(arg0);
  }

  private float SwigDirectorMethodfetchheight(ulong arg0) {
    return fetchheight(arg0);
  }

  private float SwigDirectorMethodfetch_pitch_attr(ulong arg0) {
    return fetch_pitch_attr(arg0);
  }

  private ulong SwigDirectorMethodget_associate_entity(ulong arg0) {
    return get_associate_entity(arg0);
  }

  private bool SwigDirectorMethodis_role(ulong arg0) {
    return is_role(arg0);
  }

  private uint SwigDirectorMethodfetch_hit_header_hash(ulong arg0) {
    return fetch_hit_header_hash(arg0);
  }

  private uint SwigDirectorMethodfetch_delay(ulong arg0) {
    return fetch_delay(arg0);
  }

  private float SwigDirectorMethodfetch_auto_rotatespeed(ulong arg0) {
    return fetch_auto_rotatespeed(arg0);
  }

  private float SwigDirectorMethodfetch_tsangle_factor() {
    return fetch_tsangle_factor();
  }

  private bool SwigDirectorMethodfetch_smart_targetlock(ulong arg0) {
    return fetch_smart_targetlock(arg0);
  }

  private int SwigDirectorMethodfetch_smart_targetlock_time() {
    return fetch_smart_targetlock_time();
  }

  private uint SwigDirectorMethodfetch_skill_probability_max_cumulation(ulong arg0) {
    return fetch_skill_probability_max_cumulation(arg0);
  }

  private ulong SwigDirectorMethodmob_required(ulong arg0, int arg1, float arg2, float arg3, float arg4, float arg5) {
    return mob_required(arg0, arg1, arg2, arg3, arg4, arg5);
  }

  private void SwigDirectorMethodmob_released(ulong raw_id) {
    mob_released(raw_id);
  }

  private void SwigDirectorMethodon_bullet_target_selected(ulong arg0, ulong arg1, ulong arg2) {
    on_bullet_target_selected(arg0, arg1, arg2);
  }

  private void SwigDirectorMethodon_bullet_clear(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, bool arg5) {
    on_bullet_clear(arg0, arg1, arg2, arg3, arg4, arg5);
  }

  private void SwigDirectorMethodon_skill_end(ulong arg0, uint arg1, uint arg2, uint arg3) {
    on_skill_end(arg0, arg1, arg2, arg3);
  }

  private void SwigDirectorMethodon_item_drop(ulong arg0, uint arg1) {
    on_item_drop(arg0, arg1);
  }

  private void SwigDirectorMethodon_space_time_lock(ulong arg0, float arg1, float arg2, int arg3, bool arg4) {
    on_space_time_lock(arg0, arg1, arg2, arg3, arg4);
  }

  private void SwigDirectorMethodon_trigger_qte_event(ulong arg0, int arg1) {
    on_trigger_qte_event(arg0, arg1);
  }

  private int SwigDirectorMethodget_assist_role_count(ulong arg0) {
    return get_assist_role_count(arg0);
  }

  private bool SwigDirectorMethodis_carried_player(ulong arg0) {
    return is_carried_player(arg0);
  }

  private void SwigDirectorMethoddeliver_message(ulong arg0, string arg1, int arg2) {
    deliver_message(arg0, arg1, arg2);
  }

  private void SwigDirectorMethodon_wholelife_bullet_project(ulong arg0) {
    on_wholelife_bullet_project(arg0);
  }

  private void SwigDirectorMethodpush_skill_stringify(ulong arg0, uint arg1) {
    push_skill_stringify(arg0, arg1);
  }

  private void SwigDirectorMethodpush_hit_stringify(ulong arg0, uint arg1) {
    push_hit_stringify(arg0, arg1);
  }

  private void SwigDirectorMethodon_target_selected(ulong arg0, ulong arg1) {
    on_target_selected(arg0, arg1);
  }

  private string SwigDirectorMethodfetch_hit_header_addr(ulong arg0) {
    return fetch_hit_header_addr(arg0);
  }

  private ulong SwigDirectorMethodget_targets(ulong arg0) {
    return get_targets(arg0);
  }

  private float SwigDirectorMethodget_immortal_length() {
    return get_immortal_length();
  }

  private float SwigDirectorMethodfetch_floating_upper(ulong arg0) {
    return fetch_floating_upper(arg0);
  }

  private float SwigDirectorMethodfetch_floating_lower(ulong arg0) {
    return fetch_floating_lower(arg0);
  }

  private void SwigDirectorMethodeditor_bullet_sync(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, float arg5) {
    editor_bullet_sync(arg0, arg1, arg2, arg3, arg4, arg5);
  }

  private void SwigDirectorMethodreport_error(string arg0) {
    report_error(arg0);
  }

  private void SwigDirectorMethodreport_script_parse_error(string message) {
    report_script_parse_error(message);
  }

  private void SwigDirectorMethodon_skill_begin(ulong arg0, uint arg1) {
    on_skill_begin(arg0, arg1);
  }

  private bool SwigDirectorMethodhas_buff(ulong arg0, uint arg1) {
    return has_buff(arg0, arg1);
  }

  private void SwigDirectorMethodon_state_change(ulong arg0, int arg1, int arg2) {
    on_state_change(arg0, arg1, arg2);
  }

  private void SwigDirectorMethodon_state_renew(ulong arg0, int arg1) {
    on_state_renew(arg0, arg1);
  }

  private void SwigDirectorMethodon_framefixed_on(ulong arg0, float arg1, bool arg2) {
    on_framefixed_on(arg0, arg1, arg2);
  }

  private void SwigDirectorMethodon_framefixed_off(ulong arg0) {
    on_framefixed_off(arg0);
  }

  private void SwigDirectorMethodon_cdfixed_on(ulong arg0) {
    on_cdfixed_on(arg0);
  }

  private void SwigDirectorMethodon_cdfixed_off(ulong arg0) {
    on_cdfixed_off(arg0);
  }

  private void SwigDirectorMethodon_node_change(ulong arg0, uint arg1, int arg2) {
    on_node_change(arg0, arg1, arg2);
  }

  private void SwigDirectorMethodreport_id_not_found_error(ulong raw_id) {
    report_id_not_found_error(raw_id);
  }

  private void SwigDirectorMethodreport_invalid_pos_error(ulong raw_id, float arg1, float arg2, float arg3) {
    report_invalid_pos_error(raw_id, arg1, arg2, arg3);
  }

  private bool SwigDirectorMethodverify_pos(ulong arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6) {
    return verify_pos(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
  }

  public delegate uint SwigDelegateIFacility_0();
  public delegate ulong SwigDelegateIFacility_1();
  public delegate float SwigDelegateIFacility_2(ulong arg0);
  public delegate float SwigDelegateIFacility_3(ulong arg0, uint arg1);
  public delegate int SwigDelegateIFacility_4(ulong arg0, uint arg1);
  public delegate float SwigDelegateIFacility_5(ulong arg0, float arg1, float arg2, float arg3);
  public delegate float SwigDelegateIFacility_6(ulong arg0);
  public delegate float SwigDelegateIFacility_7(ulong arg0);
  public delegate float SwigDelegateIFacility_8(ulong arg0);
  public delegate float SwigDelegateIFacility_9(ulong arg0);
  public delegate float SwigDelegateIFacility_10(ulong arg0);
  public delegate ulong SwigDelegateIFacility_11(ulong arg0);
  public delegate bool SwigDelegateIFacility_12(ulong arg0);
  public delegate uint SwigDelegateIFacility_13(ulong arg0);
  public delegate uint SwigDelegateIFacility_14(ulong arg0);
  public delegate float SwigDelegateIFacility_15(ulong arg0);
  public delegate float SwigDelegateIFacility_16();
  public delegate bool SwigDelegateIFacility_17(ulong arg0);
  public delegate int SwigDelegateIFacility_18();
  public delegate uint SwigDelegateIFacility_19(ulong arg0);
  public delegate ulong SwigDelegateIFacility_20(ulong arg0, int arg1, float arg2, float arg3, float arg4, float arg5);
  public delegate void SwigDelegateIFacility_21(ulong raw_id);
  public delegate void SwigDelegateIFacility_22(ulong arg0, ulong arg1, ulong arg2);
  public delegate void SwigDelegateIFacility_23(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, bool arg5);
  public delegate void SwigDelegateIFacility_24(ulong arg0, uint arg1, uint arg2, uint arg3);
  public delegate void SwigDelegateIFacility_25(ulong arg0, uint arg1);
  public delegate void SwigDelegateIFacility_26(ulong arg0, float arg1, float arg2, int arg3, bool arg4);
  public delegate void SwigDelegateIFacility_27(ulong arg0, int arg1);
  public delegate int SwigDelegateIFacility_28(ulong arg0);
  public delegate bool SwigDelegateIFacility_29(ulong arg0);
  public delegate void SwigDelegateIFacility_30(ulong arg0, string arg1, int arg2);
  public delegate void SwigDelegateIFacility_31(ulong arg0);
  public delegate void SwigDelegateIFacility_32(ulong arg0, uint arg1);
  public delegate void SwigDelegateIFacility_33(ulong arg0, uint arg1);
  public delegate void SwigDelegateIFacility_34(ulong arg0, ulong arg1);
  public delegate string SwigDelegateIFacility_35(ulong arg0);
  public delegate ulong SwigDelegateIFacility_36(ulong arg0);
  public delegate float SwigDelegateIFacility_37();
  public delegate float SwigDelegateIFacility_38(ulong arg0);
  public delegate float SwigDelegateIFacility_39(ulong arg0);
  public delegate void SwigDelegateIFacility_40(ulong arg0, ulong arg1, float arg2, float arg3, float arg4, float arg5);
  public delegate void SwigDelegateIFacility_41(string arg0);
  public delegate void SwigDelegateIFacility_42(string message);
  public delegate void SwigDelegateIFacility_43(ulong arg0, uint arg1);
  public delegate bool SwigDelegateIFacility_44(ulong arg0, uint arg1);
  public delegate void SwigDelegateIFacility_45(ulong arg0, int arg1, int arg2);
  public delegate void SwigDelegateIFacility_46(ulong arg0, int arg1);
  public delegate void SwigDelegateIFacility_47(ulong arg0, float arg1, bool arg2);
  public delegate void SwigDelegateIFacility_48(ulong arg0);
  public delegate void SwigDelegateIFacility_49(ulong arg0);
  public delegate void SwigDelegateIFacility_50(ulong arg0);
  public delegate void SwigDelegateIFacility_51(ulong arg0, uint arg1, int arg2);
  public delegate void SwigDelegateIFacility_52(ulong raw_id);
  public delegate void SwigDelegateIFacility_53(ulong raw_id, float arg1, float arg2, float arg3);
  public delegate bool SwigDelegateIFacility_54(ulong arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6);

  private SwigDelegateIFacility_0 swigDelegate0;
  private SwigDelegateIFacility_1 swigDelegate1;
  private SwigDelegateIFacility_2 swigDelegate2;
  private SwigDelegateIFacility_3 swigDelegate3;
  private SwigDelegateIFacility_4 swigDelegate4;
  private SwigDelegateIFacility_5 swigDelegate5;
  private SwigDelegateIFacility_6 swigDelegate6;
  private SwigDelegateIFacility_7 swigDelegate7;
  private SwigDelegateIFacility_8 swigDelegate8;
  private SwigDelegateIFacility_9 swigDelegate9;
  private SwigDelegateIFacility_10 swigDelegate10;
  private SwigDelegateIFacility_11 swigDelegate11;
  private SwigDelegateIFacility_12 swigDelegate12;
  private SwigDelegateIFacility_13 swigDelegate13;
  private SwigDelegateIFacility_14 swigDelegate14;
  private SwigDelegateIFacility_15 swigDelegate15;
  private SwigDelegateIFacility_16 swigDelegate16;
  private SwigDelegateIFacility_17 swigDelegate17;
  private SwigDelegateIFacility_18 swigDelegate18;
  private SwigDelegateIFacility_19 swigDelegate19;
  private SwigDelegateIFacility_20 swigDelegate20;
  private SwigDelegateIFacility_21 swigDelegate21;
  private SwigDelegateIFacility_22 swigDelegate22;
  private SwigDelegateIFacility_23 swigDelegate23;
  private SwigDelegateIFacility_24 swigDelegate24;
  private SwigDelegateIFacility_25 swigDelegate25;
  private SwigDelegateIFacility_26 swigDelegate26;
  private SwigDelegateIFacility_27 swigDelegate27;
  private SwigDelegateIFacility_28 swigDelegate28;
  private SwigDelegateIFacility_29 swigDelegate29;
  private SwigDelegateIFacility_30 swigDelegate30;
  private SwigDelegateIFacility_31 swigDelegate31;
  private SwigDelegateIFacility_32 swigDelegate32;
  private SwigDelegateIFacility_33 swigDelegate33;
  private SwigDelegateIFacility_34 swigDelegate34;
  private SwigDelegateIFacility_35 swigDelegate35;
  private SwigDelegateIFacility_36 swigDelegate36;
  private SwigDelegateIFacility_37 swigDelegate37;
  private SwigDelegateIFacility_38 swigDelegate38;
  private SwigDelegateIFacility_39 swigDelegate39;
  private SwigDelegateIFacility_40 swigDelegate40;
  private SwigDelegateIFacility_41 swigDelegate41;
  private SwigDelegateIFacility_42 swigDelegate42;
  private SwigDelegateIFacility_43 swigDelegate43;
  private SwigDelegateIFacility_44 swigDelegate44;
  private SwigDelegateIFacility_45 swigDelegate45;
  private SwigDelegateIFacility_46 swigDelegate46;
  private SwigDelegateIFacility_47 swigDelegate47;
  private SwigDelegateIFacility_48 swigDelegate48;
  private SwigDelegateIFacility_49 swigDelegate49;
  private SwigDelegateIFacility_50 swigDelegate50;
  private SwigDelegateIFacility_51 swigDelegate51;
  private SwigDelegateIFacility_52 swigDelegate52;
  private SwigDelegateIFacility_53 swigDelegate53;
  private SwigDelegateIFacility_54 swigDelegate54;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(ulong), typeof(float), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(ulong), typeof(int), typeof(float), typeof(float), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(ulong), typeof(ulong), typeof(ulong) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(ulong), typeof(ulong), typeof(float), typeof(float), typeof(float), typeof(bool) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(ulong), typeof(uint), typeof(uint), typeof(uint) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(ulong), typeof(float), typeof(float), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(ulong), typeof(int) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(ulong), typeof(string), typeof(int) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(ulong), typeof(ulong) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(ulong), typeof(ulong), typeof(float), typeof(float), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(ulong), typeof(uint) };
  private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(ulong), typeof(int), typeof(int) };
  private static global::System.Type[] swigMethodTypes46 = new global::System.Type[] { typeof(ulong), typeof(int) };
  private static global::System.Type[] swigMethodTypes47 = new global::System.Type[] { typeof(ulong), typeof(float), typeof(bool) };
  private static global::System.Type[] swigMethodTypes48 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes49 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes50 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes51 = new global::System.Type[] { typeof(ulong), typeof(uint), typeof(int) };
  private static global::System.Type[] swigMethodTypes52 = new global::System.Type[] { typeof(ulong) };
  private static global::System.Type[] swigMethodTypes53 = new global::System.Type[] { typeof(ulong), typeof(float), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes54 = new global::System.Type[] { typeof(ulong), typeof(float), typeof(float), typeof(float), typeof(float), typeof(float), typeof(float) };
}

}
