//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace EditorEcs {

class Xuthus_VirtualServerPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="SWIGRegisterExceptionCallbacks_Xuthus_VirtualServer")]
    public static extern void SWIGRegisterExceptionCallbacks_Xuthus_VirtualServer(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_Xuthus_VirtualServer")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_Xuthus_VirtualServer(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionDelegate))]
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }
    
    [AOT.MonoPInvokeCallback(typeof(ExceptionArgumentDelegate))]
    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionArgumentDelegate))]
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    [AOT.MonoPInvokeCallback(typeof(ExceptionArgumentDelegate))]
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_Xuthus_VirtualServer(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_Xuthus_VirtualServer(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="SWIGRegisterStringCallback_Xuthus_VirtualServer")]
    public static extern void SWIGRegisterStringCallback_Xuthus_VirtualServer(SWIGStringDelegate stringDelegate);

    [AOT.MonoPInvokeCallback(typeof(SWIGStringDelegate))]
    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_Xuthus_VirtualServer(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static Xuthus_VirtualServerPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs__FW_VERSION__get")]
  public static extern int _FW_VERSION__get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNodeMax_get")]
  public static extern int XNodeMax_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XVirtualNodeMax_get")]
  public static extern int XVirtualNodeMax_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_QTE_MAX_get")]
  public static extern int QTE_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_COND_MAX_get")]
  public static extern int COND_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_SWITCH_MAX_get")]
  public static extern int SWITCH_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_UNTIL_MAX_get")]
  public static extern int UNTIL_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_SWITCH_BRANCH_MAX_get")]
  public static extern int SWITCH_BRANCH_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_LOOP_MAX_get")]
  public static extern int LOOP_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_BULLET_GEN_MAX_get")]
  public static extern int BULLET_GEN_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_BULLET_LIFE_MAX_get")]
  public static extern int BULLET_LIFE_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_PENDING_TIME_get")]
  public static extern int PENDING_TIME_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_TARGETS_MAX_get")]
  public static extern int TARGETS_MAX_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_beginSirius")]
  public static extern void beginSirius(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_destroy")]
  public static extern void destroy(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_endSirius")]
  public static extern void endSirius();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_update")]
  public static extern void update(float jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2move")]
  public static extern void drive2move(ulong jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2dest")]
  public static extern void drive2dest(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2disable")]
  public static extern void drive2disable(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2enable")]
  public static extern void drive2enable(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_unbind_allskill")]
  public static extern void unbind_allskill(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_reload")]
  public static extern bool reload(uint jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_create__SWIG_0")]
  public static extern ulong create__SWIG_0(ulong jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5, float jarg6, bool jarg7, bool jarg8);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_create__SWIG_1")]
  public static extern ulong create__SWIG_1(ulong jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5, float jarg6, bool jarg7);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_create__SWIG_2")]
  public static extern ulong create__SWIG_2(ulong jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_bindhit")]
  public static extern void bindhit(ulong jarg1, int jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_setPosition")]
  public static extern void setPosition(ulong jarg1, float jarg2, float jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_setActionRatio")]
  public static extern void setActionRatio(ulong jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_onMoveSpeedChanged")]
  public static extern void onMoveSpeedChanged(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_bind_offslotskill")]
  public static extern void bind_offslotskill(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2idle")]
  public static extern void drive2idle(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2stand")]
  public static extern void drive2stand(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2death")]
  public static extern void drive2death(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2skill__SWIG_0")]
  public static extern bool drive2skill__SWIG_0(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2skill__SWIG_1")]
  public static extern bool drive2skill__SWIG_1(ulong jarg1, uint jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_drive2hit")]
  public static extern bool drive2hit(ulong jarg1, uint jarg2, ulong jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_slot2skill")]
  public static extern void slot2skill(ulong jarg1, ulong jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_force2idle")]
  public static extern void force2idle(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_endskill")]
  public static extern void endskill(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_setqte")]
  public static extern void setqte(ulong jarg1, uint jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCurSkill")]
  public static extern uint getCurSkill(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getState")]
  public static extern int getState(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCurSkill_ecs")]
  public static extern uint getCurSkill_ecs(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getState_ecs")]
  public static extern int getState_ecs(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_isCDTriggerAtEnd")]
  public static extern bool isCDTriggerAtEnd(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_needsync")]
  public static extern bool needsync(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_sync")]
  public static extern global::System.IntPtr sync(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_needsync_ecs")]
  public static extern bool needsync_ecs(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_sync_ecs")]
  public static extern global::System.IntPtr sync_ecs(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosX")]
  public static extern float getPosX(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosY")]
  public static extern float getPosY(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosZ")]
  public static extern float getPosZ(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_hash")]
  public static extern uint hash(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_cacheSkillScript")]
  public static extern bool cacheSkillScript(uint jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_cacheHitScript")]
  public static extern bool cacheHitScript(uint jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosFromGetterX")]
  public static extern float getPosFromGetterX(ulong jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosFromGetterY")]
  public static extern float getPosFromGetterY(ulong jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getPosFromGetterZ")]
  public static extern float getPosFromGetterZ(ulong jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getFaceFromGetter")]
  public static extern float getFaceFromGetter(ulong jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getFace")]
  public static extern float getFace(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getFace_ecs")]
  public static extern float getFace_ecs(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getHitState")]
  public static extern int getHitState(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCoolDown")]
  public static extern float getCoolDown(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCoolDownLeft")]
  public static extern float getCoolDownLeft(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCoolDown_ecs")]
  public static extern float getCoolDown_ecs(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCoolDownLeft_ecs")]
  public static extern float getCoolDownLeft_ecs(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_fresh2CoolDown__SWIG_0")]
  public static extern void fresh2CoolDown__SWIG_0(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_fresh2CoolDown__SWIG_1")]
  public static extern void fresh2CoolDown__SWIG_1(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_clear2CoolDown__SWIG_0")]
  public static extern void clear2CoolDown__SWIG_0(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_clear2CoolDown__SWIG_1")]
  public static extern void clear2CoolDown__SWIG_1(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_set2CoolDown")]
  public static extern void set2CoolDown(ulong jarg1, uint jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_set2CoolDown4SelfCd")]
  public static extern void set2CoolDown4SelfCd(ulong jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_change2CoolDown")]
  public static extern void change2CoolDown(ulong jarg1, uint jarg2, bool jarg3, float jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getCollisionType")]
  public static extern int getCollisionType(ulong jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_frameFixed")]
  public static extern void frameFixed(ulong jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_cooldownFixed")]
  public static extern void cooldownFixed(ulong jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_setDebug")]
  public static extern void setDebug(bool jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_getVersion")]
  public static extern int getVersion();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_delete_IFacility")]
  public static extern void delete_IFacility(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchframe")]
  public static extern uint IFacility_fetchframe(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchtime")]
  public static extern ulong IFacility_fetchtime(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchspeed")]
  public static extern float IFacility_fetchspeed(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchcd")]
  public static extern float IFacility_fetchcd(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchphasecount")]
  public static extern int IFacility_fetchphasecount(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_height_at")]
  public static extern float IFacility_fetch_height_at(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_rotatespeed")]
  public static extern float IFacility_fetch_rotatespeed(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_move_interpolation")]
  public static extern float IFacility_fetch_move_interpolation(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchradius")]
  public static extern float IFacility_fetchradius(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetchheight")]
  public static extern float IFacility_fetchheight(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_pitch_attr")]
  public static extern float IFacility_fetch_pitch_attr(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_get_associate_entity")]
  public static extern ulong IFacility_get_associate_entity(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_is_role")]
  public static extern bool IFacility_is_role(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_hit_header_hash")]
  public static extern uint IFacility_fetch_hit_header_hash(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_delay")]
  public static extern uint IFacility_fetch_delay(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_auto_rotatespeed")]
  public static extern float IFacility_fetch_auto_rotatespeed(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_tsangle_factor")]
  public static extern float IFacility_fetch_tsangle_factor(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_smart_targetlock")]
  public static extern bool IFacility_fetch_smart_targetlock(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_smart_targetlock_time")]
  public static extern int IFacility_fetch_smart_targetlock_time(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_skill_probability_max_cumulation")]
  public static extern uint IFacility_fetch_skill_probability_max_cumulation(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_mob_required")]
  public static extern ulong IFacility_mob_required(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_mob_released")]
  public static extern void IFacility_mob_released(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_bullet_target_selected")]
  public static extern void IFacility_on_bullet_target_selected(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, ulong jarg3, ulong jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_bullet_clear")]
  public static extern void IFacility_on_bullet_clear(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, ulong jarg3, float jarg4, float jarg5, float jarg6, bool jarg7);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_skill_end")]
  public static extern void IFacility_on_skill_end(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3, uint jarg4, uint jarg5);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_item_drop")]
  public static extern void IFacility_on_item_drop(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_space_time_lock")]
  public static extern void IFacility_on_space_time_lock(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, float jarg3, float jarg4, int jarg5, bool jarg6);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_trigger_qte_event")]
  public static extern void IFacility_on_trigger_qte_event(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_get_assist_role_count")]
  public static extern int IFacility_get_assist_role_count(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_is_carried_player")]
  public static extern bool IFacility_is_carried_player(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_deliver_message")]
  public static extern void IFacility_deliver_message(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, string jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_wholelife_bullet_project")]
  public static extern void IFacility_on_wholelife_bullet_project(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_push_skill_stringify")]
  public static extern void IFacility_push_skill_stringify(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_push_hit_stringify")]
  public static extern void IFacility_push_hit_stringify(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_target_selected")]
  public static extern void IFacility_on_target_selected(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_hit_header_addr")]
  public static extern string IFacility_fetch_hit_header_addr(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_get_targets")]
  public static extern ulong IFacility_get_targets(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_get_immortal_length")]
  public static extern float IFacility_get_immortal_length(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_floating_upper")]
  public static extern float IFacility_fetch_floating_upper(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_fetch_floating_lower")]
  public static extern float IFacility_fetch_floating_lower(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_editor_bullet_sync")]
  public static extern void IFacility_editor_bullet_sync(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, ulong jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_report_error")]
  public static extern void IFacility_report_error(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_report_script_parse_error")]
  public static extern void IFacility_report_script_parse_error(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_skill_begin")]
  public static extern void IFacility_on_skill_begin(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_has_buff")]
  public static extern bool IFacility_has_buff(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_state_change")]
  public static extern void IFacility_on_state_change(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, int jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_state_renew")]
  public static extern void IFacility_on_state_renew(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_framefixed_on")]
  public static extern void IFacility_on_framefixed_on(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, float jarg3, bool jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_framefixed_off")]
  public static extern void IFacility_on_framefixed_off(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_cdfixed_on")]
  public static extern void IFacility_on_cdfixed_on(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_cdfixed_off")]
  public static extern void IFacility_on_cdfixed_off(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_on_node_change")]
  public static extern void IFacility_on_node_change(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, uint jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_report_id_not_found_error")]
  public static extern void IFacility_report_id_not_found_error(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_report_invalid_pos_error")]
  public static extern void IFacility_report_invalid_pos_error(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_verify_pos")]
  public static extern bool IFacility_verify_pos(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_new_IFacility")]
  public static extern global::System.IntPtr new_IFacility();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_IFacility_director_connect")]
  public static extern void IFacility_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, IFacility.SwigDelegateIFacility_0 delegate0, IFacility.SwigDelegateIFacility_1 delegate1, IFacility.SwigDelegateIFacility_2 delegate2, IFacility.SwigDelegateIFacility_3 delegate3, IFacility.SwigDelegateIFacility_4 delegate4, IFacility.SwigDelegateIFacility_5 delegate5, IFacility.SwigDelegateIFacility_6 delegate6, IFacility.SwigDelegateIFacility_7 delegate7, IFacility.SwigDelegateIFacility_8 delegate8, IFacility.SwigDelegateIFacility_9 delegate9, IFacility.SwigDelegateIFacility_10 delegate10, IFacility.SwigDelegateIFacility_11 delegate11, IFacility.SwigDelegateIFacility_12 delegate12, IFacility.SwigDelegateIFacility_13 delegate13, IFacility.SwigDelegateIFacility_14 delegate14, IFacility.SwigDelegateIFacility_15 delegate15, IFacility.SwigDelegateIFacility_16 delegate16, IFacility.SwigDelegateIFacility_17 delegate17, IFacility.SwigDelegateIFacility_18 delegate18, IFacility.SwigDelegateIFacility_19 delegate19, IFacility.SwigDelegateIFacility_20 delegate20, IFacility.SwigDelegateIFacility_21 delegate21, IFacility.SwigDelegateIFacility_22 delegate22, IFacility.SwigDelegateIFacility_23 delegate23, IFacility.SwigDelegateIFacility_24 delegate24, IFacility.SwigDelegateIFacility_25 delegate25, IFacility.SwigDelegateIFacility_26 delegate26, IFacility.SwigDelegateIFacility_27 delegate27, IFacility.SwigDelegateIFacility_28 delegate28, IFacility.SwigDelegateIFacility_29 delegate29, IFacility.SwigDelegateIFacility_30 delegate30, IFacility.SwigDelegateIFacility_31 delegate31, IFacility.SwigDelegateIFacility_32 delegate32, IFacility.SwigDelegateIFacility_33 delegate33, IFacility.SwigDelegateIFacility_34 delegate34, IFacility.SwigDelegateIFacility_35 delegate35, IFacility.SwigDelegateIFacility_36 delegate36, IFacility.SwigDelegateIFacility_37 delegate37, IFacility.SwigDelegateIFacility_38 delegate38, IFacility.SwigDelegateIFacility_39 delegate39, IFacility.SwigDelegateIFacility_40 delegate40, IFacility.SwigDelegateIFacility_41 delegate41, IFacility.SwigDelegateIFacility_42 delegate42, IFacility.SwigDelegateIFacility_43 delegate43, IFacility.SwigDelegateIFacility_44 delegate44, IFacility.SwigDelegateIFacility_45 delegate45, IFacility.SwigDelegateIFacility_46 delegate46, IFacility.SwigDelegateIFacility_47 delegate47, IFacility.SwigDelegateIFacility_48 delegate48, IFacility.SwigDelegateIFacility_49 delegate49, IFacility.SwigDelegateIFacility_50 delegate50, IFacility.SwigDelegateIFacility_51 delegate51, IFacility.SwigDelegateIFacility_52 delegate52, IFacility.SwigDelegateIFacility_53 delegate53, IFacility.SwigDelegateIFacility_54 delegate54);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XSync_Min_Lag_get")]
  public static extern int XSync_Min_Lag_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XSync_Max_Lag_get")]
  public static extern int XSync_Max_Lag_get();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_sync_sequence_set")]
  public static extern void XNet_sync_sequence_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_sync_sequence_get")]
  public static extern uint XNet_sync_sequence_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_old_sequence_set")]
  public static extern void XNet_old_sequence_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_old_sequence_get")]
  public static extern uint XNet_old_sequence_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_interpolation_set")]
  public static extern void XNet_interpolation_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_interpolation_get")]
  public static extern float XNet_interpolation_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_state_set")]
  public static extern void XNet_state_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_state_get")]
  public static extern int XNet_state_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_action_ratio_set")]
  public static extern void XNet_action_ratio_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_action_ratio_get")]
  public static extern float XNet_action_ratio_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_face_set")]
  public static extern void XNet_face_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_face_get")]
  public static extern float XNet_face_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_x_set")]
  public static extern void XNet_x_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_x_get")]
  public static extern float XNet_x_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_y_set")]
  public static extern void XNet_y_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_y_get")]
  public static extern float XNet_y_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_z_set")]
  public static extern void XNet_z_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_z_get")]
  public static extern float XNet_z_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_velocity_set")]
  public static extern void XNet_velocity_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_velocity_get")]
  public static extern float XNet_velocity_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_passive_set")]
  public static extern void XNet_passive_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_passive_get")]
  public static extern uint XNet_passive_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_condition_seq_set")]
  public static extern void XNet_condition_seq_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_condition_seq_get")]
  public static extern uint XNet_condition_seq_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_switch_seq_set")]
  public static extern void XNet_switch_seq_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_switch_seq_get")]
  public static extern uint XNet_switch_seq_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_while_seq_set")]
  public static extern void XNet_while_seq_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_while_seq_get")]
  public static extern uint XNet_while_seq_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_percentage_set")]
  public static extern void XNet_percentage_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_percentage_get")]
  public static extern float XNet_percentage_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_script_id_set")]
  public static extern void XNet_script_id_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_script_id_get")]
  public static extern uint XNet_script_id_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_script_version_set")]
  public static extern void XNet_script_version_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_script_version_get")]
  public static extern int XNet_script_version_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_skill_code_set")]
  public static extern void XNet_skill_code_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_skill_code_get")]
  public static extern ulong XNet_skill_code_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_target_set")]
  public static extern void XNet_target_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_target_get")]
  public static extern ulong XNet_target_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_entt_set")]
  public static extern void XNet_from_entt_set(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_entt_get")]
  public static extern ulong XNet_from_entt_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_hash_set")]
  public static extern void XNet_from_hash_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_hash_get")]
  public static extern uint XNet_from_hash_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_index_set")]
  public static extern void XNet_from_index_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_index_get")]
  public static extern int XNet_from_index_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_dir_set")]
  public static extern void XNet_from_dir_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_XNet_from_dir_get")]
  public static extern float XNet_from_dir_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_new_XNet")]
  public static extern global::System.IntPtr new_XNet();

  [global::System.Runtime.InteropServices.DllImport("Xuthus_VirtualServer", EntryPoint="CSharp_EditorEcs_delete_XNet")]
  public static extern void delete_XNet(global::System.Runtime.InteropServices.HandleRef jarg1);
}

}
