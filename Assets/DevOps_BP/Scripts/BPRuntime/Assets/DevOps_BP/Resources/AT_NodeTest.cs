//Generated by Blueprint
using System;
using System.Linq;
using System.Collections.Generic;
using UnityEngine;
using Blueprint.Actor.EventSystem;
using Blueprint.Logic;
namespace Blueprint.UnityLogic
{
	[LoadPath(@"AT_NodeTest")]
	public class AT_NodeTest : Blueprint.Actor.ActorBase
	{
		public AT_NodeTest()
		{
			
		}
		public override void ResetVarValue()
		{
			base.ResetVarValue();
			DelayControl.Instance.RemoveAllDelay(this);
			
		}
		public override void Awake()
		{
			base.Awake();
			
			// 因为无法触发第一次enable，所以这里手动触发第一次
			actorEventSystem.Send(ActorEventType.OnEnable);
		}
		public override void Start()
		{
			//预定义节点OnMessage_53
			BpPluginNode.BPReCall += CustomEvent_1;
			//执行节点Register_54
			BpPluginNode.Register();
			//节点StringConcat_33
			var StringConcat_33_value = "AutoTest_NodeTest : " + "监听开始";
			//执行节点Log_32
			UnityEngine.Debug.Log(StringConcat_33_value);
			
		}
		public override void Update()
		{
			
		}
		public virtual void CustomEvent_1(string CustomEvent_1_16_param__0, List<string> CustomEvent_1_16_param__1)
		{
			//节点IsNull_37
			var IsNull_37_ret = CustomEvent_1_16_param__1 == null;
			//预定义节点IfThenElse_27
			if (IsNull_37_ret)
			{
				//节点StringConcat_29
				var StringConcat_29_value = "AutoTest_NodeTest : " + CustomEvent_1_16_param__0;
				//执行节点Log_28
				UnityEngine.Debug.Log(StringConcat_29_value);
				
			}
			else
			{
				//预定义节点SwitchOnInt_47
				switch(CustomEvent_1_16_param__1.Count)
				{
					case 1:
					{
						//节点StringValue_46
						var StringValue_46_value = ":";
						//节点StringConcat_24
						var StringConcat_24_value = "AutoTest_NodeTest : " + CustomEvent_1_16_param__0 + StringValue_46_value + CustomEvent_1_16_param__1[0];
						//执行节点Log_23
						UnityEngine.Debug.Log(StringConcat_24_value);
						break;
					}
					case 2:
					{
						//节点StringValue_50
						var StringValue_50_value = ":";
						//节点StringConcat_49
						var StringConcat_49_value = "AutoTest_NodeTest : " + CustomEvent_1_16_param__0 + StringValue_50_value + CustomEvent_1_16_param__1[0] + StringValue_50_value + CustomEvent_1_16_param__1[1];
						//执行节点Log_48
						UnityEngine.Debug.Log(StringConcat_49_value);
						break;
					}
					
				}
				
				//节点Greater_58
				var Greater_58_ret = CustomEvent_1_16_param__1.Count > 2;
				//预定义节点IfThenElse_59
				if (Greater_58_ret)
				{
					//节点IntToString_62
					var IntToString_62_value = Convert.ToString(CustomEvent_1_16_param__1.Count);
					//节点StringConcat_60
					var StringConcat_60_value = "AutoTest : " + CustomEvent_1_16_param__0 + IntToString_62_value;
					//执行节点Log_61
					UnityEngine.Debug.Log(StringConcat_60_value);
					
				}
				else
				{
					
				}
				
			}
			
		}
		
	}
}