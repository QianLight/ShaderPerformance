// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Zeus.Core.FileSystem
{

using global::System;
using global::System.Collections.Generic;
using global::ZeusFlatBuffers;

public struct RedundantFileCheckSumInfoFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RedundantFileCheckSumInfoFB GetRootAsRedundantFileCheckSumInfoFB(ByteBuffer _bb) { return GetRootAsRedundantFileCheckSumInfoFB(_bb, new RedundantFileCheckSumInfoFB()); }
  public static RedundantFileCheckSumInfoFB GetRootAsRedundantFileCheckSumInfoFB(ByteBuffer _bb, RedundantFileCheckSumInfoFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RedundantFileCheckSumInfoFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB? Infos(int j) { int o = __p.__offset(4); return o != 0 ? (Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB?)(new Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InfosLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Zeus.Core.FileSystem.RedundantFileCheckSumInfoFB> CreateRedundantFileCheckSumInfoFB(FlatBufferBuilder builder,
      VectorOffset infosOffset = default(VectorOffset)) {
    builder.StartTable(1);
    RedundantFileCheckSumInfoFB.AddInfos(builder, infosOffset);
    return RedundantFileCheckSumInfoFB.EndRedundantFileCheckSumInfoFB(builder);
  }

  public static void StartRedundantFileCheckSumInfoFB(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddInfos(FlatBufferBuilder builder, VectorOffset infosOffset) { builder.AddOffset(0, infosOffset.Value, 0); }
  public static VectorOffset CreateInfosVector(FlatBufferBuilder builder, Offset<Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInfosVectorBlock(FlatBufferBuilder builder, Offset<Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Zeus.Core.FileSystem.RedundantFileCheckSumInfoFB> EndRedundantFileCheckSumInfoFB(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Zeus.Core.FileSystem.RedundantFileCheckSumInfoFB>(o);
  }
  public static void FinishRedundantFileCheckSumInfoFBBuffer(FlatBufferBuilder builder, Offset<Zeus.Core.FileSystem.RedundantFileCheckSumInfoFB> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRedundantFileCheckSumInfoFBBuffer(FlatBufferBuilder builder, Offset<Zeus.Core.FileSystem.RedundantFileCheckSumInfoFB> offset) { builder.FinishSizePrefixed(offset.Value); }
};

public struct RelativePath2CheckSumInfoFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RelativePath2CheckSumInfoFB GetRootAsRelativePath2CheckSumInfoFB(ByteBuffer _bb) { return GetRootAsRelativePath2CheckSumInfoFB(_bb, new RelativePath2CheckSumInfoFB()); }
  public static RelativePath2CheckSumInfoFB GetRootAsRelativePath2CheckSumInfoFB(ByteBuffer _bb, RelativePath2CheckSumInfoFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RelativePath2CheckSumInfoFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string RelativePath { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRelativePathBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRelativePathBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRelativePathArray() { return __p.__vector_as_array<byte>(4); }
  public string CheckSum { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCheckSumBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetCheckSumBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetCheckSumArray() { return __p.__vector_as_array<byte>(6); }
  public bool IsSubPackage { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB> CreateRelativePath2CheckSumInfoFB(FlatBufferBuilder builder,
      StringOffset relativePathOffset = default(StringOffset),
      StringOffset checkSumOffset = default(StringOffset),
      bool isSubPackage = false) {
    builder.StartTable(3);
    RelativePath2CheckSumInfoFB.AddCheckSum(builder, checkSumOffset);
    RelativePath2CheckSumInfoFB.AddRelativePath(builder, relativePathOffset);
    RelativePath2CheckSumInfoFB.AddIsSubPackage(builder, isSubPackage);
    return RelativePath2CheckSumInfoFB.EndRelativePath2CheckSumInfoFB(builder);
  }

  public static void StartRelativePath2CheckSumInfoFB(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddRelativePath(FlatBufferBuilder builder, StringOffset relativePathOffset) { builder.AddOffset(0, relativePathOffset.Value, 0); }
  public static void AddCheckSum(FlatBufferBuilder builder, StringOffset checkSumOffset) { builder.AddOffset(1, checkSumOffset.Value, 0); }
  public static void AddIsSubPackage(FlatBufferBuilder builder, bool isSubPackage) { builder.AddBool(2, isSubPackage, false); }
  public static Offset<Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB> EndRelativePath2CheckSumInfoFB(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Zeus.Core.FileSystem.RelativePath2CheckSumInfoFB>(o);
  }
};


}
